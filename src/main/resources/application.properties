# setting up console log
# spring.main.banner-mode=off
# logging.pattern.console=

# setting up server port
server.port=8080

# setting up local h2 database config
# spring.datasource.url=jdbc:h2:mem:testdb 
# spring.datasource.url=jdbc:h2:file:./database/todoapp
# spring.datasource.driverClassName=org.h2.Driver
# spring.datasource.username=admin
# spring.datasource.password=pass
# spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# # setting up local h2 database console
# spring.h2.console.enabled=true
# spring.h2.console.path=/h2-console
# spring.h2.console.settings.web-allow-others=false

# # setting up h2 local database table on startup
# spring.jpa.hibernate.ddl-auto=update

# # allowing devtools restart support
# spring.devtools.restart.enabled=true


# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
spring.datasource.url=jdbc:postgresql://localhost:5432/ums
spring.datasource.username=postgres
spring.datasource.password=123
spring.datasource.driver-class-name=org.postgresql.Driver
# Keep the connection alive if idle for a long time (needed in production)
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.devtools.restart.enabled=true
# spring.datasource.testWhileIdle=true
# spring.datasource.validationQuery=SELECT 1
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
# spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
# spring.jpa.hibernate.ddl-auto=create-drop

# Naming strategy
# spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
# spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect